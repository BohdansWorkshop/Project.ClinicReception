//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.ClinicReception.ReceptionReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientModel", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.Sex SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditedDate {
            get {
                return this.EditedDateField;
            }
            set {
                if ((this.EditedDateField.Equals(value) != true)) {
                    this.EditedDateField = value;
                    this.RaisePropertyChanged("EditedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.Sex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sex", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.DbEntity.Enums")]
    public enum Sex : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoctorModel", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class DoctorModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GraphicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.DoctorQualification QualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.Sex SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditedDate {
            get {
                return this.EditedDateField;
            }
            set {
                if ((this.EditedDateField.Equals(value) != true)) {
                    this.EditedDateField = value;
                    this.RaisePropertyChanged("EditedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Graphic {
            get {
                return this.GraphicField;
            }
            set {
                if ((object.ReferenceEquals(this.GraphicField, value) != true)) {
                    this.GraphicField = value;
                    this.RaisePropertyChanged("Graphic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.DoctorQualification Qualification {
            get {
                return this.QualificationField;
            }
            set {
                if ((this.QualificationField.Equals(value) != true)) {
                    this.QualificationField = value;
                    this.RaisePropertyChanged("Qualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.Sex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoctorQualification", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.DbEntity.Enums")]
    public enum DoctorQualification : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Allergist = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cardiologist = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dentist = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dermatologist = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Endocrinologist = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pediatrician = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Psychiatrist = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderModel", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class OrderModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CabinetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.ClientModel ClientOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.DoctorModel DoctorOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cabinet {
            get {
                return this.CabinetField;
            }
            set {
                if ((object.ReferenceEquals(this.CabinetField, value) != true)) {
                    this.CabinetField = value;
                    this.RaisePropertyChanged("Cabinet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.ClientModel ClientOrder {
            get {
                return this.ClientOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientOrderField, value) != true)) {
                    this.ClientOrderField = value;
                    this.RaisePropertyChanged("ClientOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.DoctorModel DoctorOrder {
            get {
                return this.DoctorOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorOrderField, value) != true)) {
                    this.DoctorOrderField = value;
                    this.RaisePropertyChanged("DoctorOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditedDate {
            get {
                return this.EditedDateField;
            }
            set {
                if ((this.EditedDateField.Equals(value) != true)) {
                    this.EditedDateField = value;
                    this.RaisePropertyChanged("EditedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdEntity", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.DbEntity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Project.ClinicReception.ReceptionReference.Order))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Project.ClinicReception.ReceptionReference.AccountEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Project.ClinicReception.ReceptionReference.NameEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Project.ClinicReception.ReceptionReference.Client))]
    public partial class IdEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.DbEntity")]
    [System.SerializableAttribute()]
    public partial class Order : Project.ClinicReception.ReceptionReference.IdEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CabinetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.Client ClientOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.Doctor DoctorOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cabinet {
            get {
                return this.CabinetField;
            }
            set {
                if ((object.ReferenceEquals(this.CabinetField, value) != true)) {
                    this.CabinetField = value;
                    this.RaisePropertyChanged("Cabinet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.Client ClientOrder {
            get {
                return this.ClientOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientOrderField, value) != true)) {
                    this.ClientOrderField = value;
                    this.RaisePropertyChanged("ClientOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.Doctor DoctorOrder {
            get {
                return this.DoctorOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorOrderField, value) != true)) {
                    this.DoctorOrderField = value;
                    this.RaisePropertyChanged("DoctorOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditedDate {
            get {
                return this.EditedDateField;
            }
            set {
                if ((this.EditedDateField.Equals(value) != true)) {
                    this.EditedDateField = value;
                    this.RaisePropertyChanged("EditedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountEntity", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.DbEntity")]
    [System.SerializableAttribute()]
    public partial class AccountEntity : Project.ClinicReception.ReceptionReference.IdEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameEntity", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.DbEntity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Project.ClinicReception.ReceptionReference.Doctor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Project.ClinicReception.ReceptionReference.Client))]
    public partial class NameEntity : Project.ClinicReception.ReceptionReference.IdEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.DbEntity")]
    [System.SerializableAttribute()]
    public partial class Client : Project.ClinicReception.ReceptionReference.NameEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.Sex SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditedDate {
            get {
                return this.EditedDateField;
            }
            set {
                if ((this.EditedDateField.Equals(value) != true)) {
                    this.EditedDateField = value;
                    this.RaisePropertyChanged("EditedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.Sex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/Project.ClinicReception.DbEntity")]
    [System.SerializableAttribute()]
    public partial class Doctor : Project.ClinicReception.ReceptionReference.NameEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EditedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GraphicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.DoctorQualification QualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Project.ClinicReception.ReceptionReference.Sex SexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EditedDate {
            get {
                return this.EditedDateField;
            }
            set {
                if ((this.EditedDateField.Equals(value) != true)) {
                    this.EditedDateField = value;
                    this.RaisePropertyChanged("EditedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Graphic {
            get {
                return this.GraphicField;
            }
            set {
                if ((object.ReferenceEquals(this.GraphicField, value) != true)) {
                    this.GraphicField = value;
                    this.RaisePropertyChanged("Graphic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.DoctorQualification Qualification {
            get {
                return this.QualificationField;
            }
            set {
                if ((this.QualificationField.Equals(value) != true)) {
                    this.QualificationField = value;
                    this.RaisePropertyChanged("Qualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project.ClinicReception.ReceptionReference.Sex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReceptionReference.IReceptionService")]
    public interface IReceptionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetClients", ReplyAction="http://tempuri.org/IReceptionService/GetClientsResponse")]
        Project.ClinicReception.ReceptionReference.ClientModel[] GetClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetClients", ReplyAction="http://tempuri.org/IReceptionService/GetClientsResponse")]
        System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.ClientModel[]> GetClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetDoctors", ReplyAction="http://tempuri.org/IReceptionService/GetDoctorsResponse")]
        Project.ClinicReception.ReceptionReference.DoctorModel[] GetDoctors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetDoctors", ReplyAction="http://tempuri.org/IReceptionService/GetDoctorsResponse")]
        System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.DoctorModel[]> GetDoctorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetOrders", ReplyAction="http://tempuri.org/IReceptionService/GetOrdersResponse")]
        Project.ClinicReception.ReceptionReference.OrderModel[] GetOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetOrders", ReplyAction="http://tempuri.org/IReceptionService/GetOrdersResponse")]
        System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.OrderModel[]> GetOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetDetailClientInfo", ReplyAction="http://tempuri.org/IReceptionService/GetDetailClientInfoResponse")]
        Project.ClinicReception.ReceptionReference.Client GetDetailClientInfo(System.Guid clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetDetailClientInfo", ReplyAction="http://tempuri.org/IReceptionService/GetDetailClientInfoResponse")]
        System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.Client> GetDetailClientInfoAsync(System.Guid clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetDetailDoctorInfo", ReplyAction="http://tempuri.org/IReceptionService/GetDetailDoctorInfoResponse")]
        Project.ClinicReception.ReceptionReference.Doctor GetDetailDoctorInfo(System.Guid doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetDetailDoctorInfo", ReplyAction="http://tempuri.org/IReceptionService/GetDetailDoctorInfoResponse")]
        System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.Doctor> GetDetailDoctorInfoAsync(System.Guid doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetDetailOrderInfo", ReplyAction="http://tempuri.org/IReceptionService/GetDetailOrderInfoResponse")]
        Project.ClinicReception.ReceptionReference.Order GetDetailOrderInfo(System.Guid orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/GetDetailOrderInfo", ReplyAction="http://tempuri.org/IReceptionService/GetDetailOrderInfoResponse")]
        System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.Order> GetDetailOrderInfoAsync(System.Guid orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/AddClient", ReplyAction="http://tempuri.org/IReceptionService/AddClientResponse")]
        void AddClient(Project.ClinicReception.ReceptionReference.ClientModel newClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/AddClient", ReplyAction="http://tempuri.org/IReceptionService/AddClientResponse")]
        System.Threading.Tasks.Task AddClientAsync(Project.ClinicReception.ReceptionReference.ClientModel newClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/EditClient", ReplyAction="http://tempuri.org/IReceptionService/EditClientResponse")]
        void EditClient(Project.ClinicReception.ReceptionReference.ClientModel client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/EditClient", ReplyAction="http://tempuri.org/IReceptionService/EditClientResponse")]
        System.Threading.Tasks.Task EditClientAsync(Project.ClinicReception.ReceptionReference.ClientModel client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/DeleteClient", ReplyAction="http://tempuri.org/IReceptionService/DeleteClientResponse")]
        void DeleteClient(System.Guid clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/DeleteClient", ReplyAction="http://tempuri.org/IReceptionService/DeleteClientResponse")]
        System.Threading.Tasks.Task DeleteClientAsync(System.Guid clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/AddDoctor", ReplyAction="http://tempuri.org/IReceptionService/AddDoctorResponse")]
        void AddDoctor(Project.ClinicReception.ReceptionReference.DoctorModel newDoctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/AddDoctor", ReplyAction="http://tempuri.org/IReceptionService/AddDoctorResponse")]
        System.Threading.Tasks.Task AddDoctorAsync(Project.ClinicReception.ReceptionReference.DoctorModel newDoctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/DeleteDoctor", ReplyAction="http://tempuri.org/IReceptionService/DeleteDoctorResponse")]
        void DeleteDoctor(System.Guid doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/DeleteDoctor", ReplyAction="http://tempuri.org/IReceptionService/DeleteDoctorResponse")]
        System.Threading.Tasks.Task DeleteDoctorAsync(System.Guid doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/EditDoctor", ReplyAction="http://tempuri.org/IReceptionService/EditDoctorResponse")]
        void EditDoctor(Project.ClinicReception.ReceptionReference.DoctorModel doctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/EditDoctor", ReplyAction="http://tempuri.org/IReceptionService/EditDoctorResponse")]
        System.Threading.Tasks.Task EditDoctorAsync(Project.ClinicReception.ReceptionReference.DoctorModel doctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/AddOrder", ReplyAction="http://tempuri.org/IReceptionService/AddOrderResponse")]
        void AddOrder(Project.ClinicReception.ReceptionReference.OrderModel order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/AddOrder", ReplyAction="http://tempuri.org/IReceptionService/AddOrderResponse")]
        System.Threading.Tasks.Task AddOrderAsync(Project.ClinicReception.ReceptionReference.OrderModel order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/DeleteOrder", ReplyAction="http://tempuri.org/IReceptionService/DeleteOrderResponse")]
        void DeleteOrder(System.Guid orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/DeleteOrder", ReplyAction="http://tempuri.org/IReceptionService/DeleteOrderResponse")]
        System.Threading.Tasks.Task DeleteOrderAsync(System.Guid orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/EditOrder", ReplyAction="http://tempuri.org/IReceptionService/EditOrderResponse")]
        void EditOrder(Project.ClinicReception.ReceptionReference.OrderModel order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/EditOrder", ReplyAction="http://tempuri.org/IReceptionService/EditOrderResponse")]
        System.Threading.Tasks.Task EditOrderAsync(Project.ClinicReception.ReceptionReference.OrderModel order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/AddAccount", ReplyAction="http://tempuri.org/IReceptionService/AddAccountResponse")]
        void AddAccount(Project.ClinicReception.ReceptionReference.AccountEntity item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/AddAccount", ReplyAction="http://tempuri.org/IReceptionService/AddAccountResponse")]
        System.Threading.Tasks.Task AddAccountAsync(Project.ClinicReception.ReceptionReference.AccountEntity item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/FindAccount", ReplyAction="http://tempuri.org/IReceptionService/FindAccountResponse")]
        Project.ClinicReception.ReceptionReference.AccountEntity[] FindAccount(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceptionService/FindAccount", ReplyAction="http://tempuri.org/IReceptionService/FindAccountResponse")]
        System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.AccountEntity[]> FindAccountAsync(string login, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReceptionServiceChannel : Project.ClinicReception.ReceptionReference.IReceptionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReceptionServiceClient : System.ServiceModel.ClientBase<Project.ClinicReception.ReceptionReference.IReceptionService>, Project.ClinicReception.ReceptionReference.IReceptionService {
        
        public ReceptionServiceClient() {
        }
        
        public ReceptionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReceptionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceptionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceptionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Project.ClinicReception.ReceptionReference.ClientModel[] GetClients() {
            return base.Channel.GetClients();
        }
        
        public System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.ClientModel[]> GetClientsAsync() {
            return base.Channel.GetClientsAsync();
        }
        
        public Project.ClinicReception.ReceptionReference.DoctorModel[] GetDoctors() {
            return base.Channel.GetDoctors();
        }
        
        public System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.DoctorModel[]> GetDoctorsAsync() {
            return base.Channel.GetDoctorsAsync();
        }
        
        public Project.ClinicReception.ReceptionReference.OrderModel[] GetOrders() {
            return base.Channel.GetOrders();
        }
        
        public System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.OrderModel[]> GetOrdersAsync() {
            return base.Channel.GetOrdersAsync();
        }
        
        public Project.ClinicReception.ReceptionReference.Client GetDetailClientInfo(System.Guid clientId) {
            return base.Channel.GetDetailClientInfo(clientId);
        }
        
        public System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.Client> GetDetailClientInfoAsync(System.Guid clientId) {
            return base.Channel.GetDetailClientInfoAsync(clientId);
        }
        
        public Project.ClinicReception.ReceptionReference.Doctor GetDetailDoctorInfo(System.Guid doctorId) {
            return base.Channel.GetDetailDoctorInfo(doctorId);
        }
        
        public System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.Doctor> GetDetailDoctorInfoAsync(System.Guid doctorId) {
            return base.Channel.GetDetailDoctorInfoAsync(doctorId);
        }
        
        public Project.ClinicReception.ReceptionReference.Order GetDetailOrderInfo(System.Guid orderId) {
            return base.Channel.GetDetailOrderInfo(orderId);
        }
        
        public System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.Order> GetDetailOrderInfoAsync(System.Guid orderId) {
            return base.Channel.GetDetailOrderInfoAsync(orderId);
        }
        
        public void AddClient(Project.ClinicReception.ReceptionReference.ClientModel newClient) {
            base.Channel.AddClient(newClient);
        }
        
        public System.Threading.Tasks.Task AddClientAsync(Project.ClinicReception.ReceptionReference.ClientModel newClient) {
            return base.Channel.AddClientAsync(newClient);
        }
        
        public void EditClient(Project.ClinicReception.ReceptionReference.ClientModel client) {
            base.Channel.EditClient(client);
        }
        
        public System.Threading.Tasks.Task EditClientAsync(Project.ClinicReception.ReceptionReference.ClientModel client) {
            return base.Channel.EditClientAsync(client);
        }
        
        public void DeleteClient(System.Guid clientId) {
            base.Channel.DeleteClient(clientId);
        }
        
        public System.Threading.Tasks.Task DeleteClientAsync(System.Guid clientId) {
            return base.Channel.DeleteClientAsync(clientId);
        }
        
        public void AddDoctor(Project.ClinicReception.ReceptionReference.DoctorModel newDoctor) {
            base.Channel.AddDoctor(newDoctor);
        }
        
        public System.Threading.Tasks.Task AddDoctorAsync(Project.ClinicReception.ReceptionReference.DoctorModel newDoctor) {
            return base.Channel.AddDoctorAsync(newDoctor);
        }
        
        public void DeleteDoctor(System.Guid doctorId) {
            base.Channel.DeleteDoctor(doctorId);
        }
        
        public System.Threading.Tasks.Task DeleteDoctorAsync(System.Guid doctorId) {
            return base.Channel.DeleteDoctorAsync(doctorId);
        }
        
        public void EditDoctor(Project.ClinicReception.ReceptionReference.DoctorModel doctor) {
            base.Channel.EditDoctor(doctor);
        }
        
        public System.Threading.Tasks.Task EditDoctorAsync(Project.ClinicReception.ReceptionReference.DoctorModel doctor) {
            return base.Channel.EditDoctorAsync(doctor);
        }
        
        public void AddOrder(Project.ClinicReception.ReceptionReference.OrderModel order) {
            base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task AddOrderAsync(Project.ClinicReception.ReceptionReference.OrderModel order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public void DeleteOrder(System.Guid orderId) {
            base.Channel.DeleteOrder(orderId);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(System.Guid orderId) {
            return base.Channel.DeleteOrderAsync(orderId);
        }
        
        public void EditOrder(Project.ClinicReception.ReceptionReference.OrderModel order) {
            base.Channel.EditOrder(order);
        }
        
        public System.Threading.Tasks.Task EditOrderAsync(Project.ClinicReception.ReceptionReference.OrderModel order) {
            return base.Channel.EditOrderAsync(order);
        }
        
        public void AddAccount(Project.ClinicReception.ReceptionReference.AccountEntity item) {
            base.Channel.AddAccount(item);
        }
        
        public System.Threading.Tasks.Task AddAccountAsync(Project.ClinicReception.ReceptionReference.AccountEntity item) {
            return base.Channel.AddAccountAsync(item);
        }
        
        public Project.ClinicReception.ReceptionReference.AccountEntity[] FindAccount(string login, string password) {
            return base.Channel.FindAccount(login, password);
        }
        
        public System.Threading.Tasks.Task<Project.ClinicReception.ReceptionReference.AccountEntity[]> FindAccountAsync(string login, string password) {
            return base.Channel.FindAccountAsync(login, password);
        }
    }
}
